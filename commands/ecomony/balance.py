import discord
from discord.ext import commands
from discord import app_commands
from commands.ecomony.economy_manager import economy_manager

class Balance(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="balance", description="Ki·ªÉm tra s·ªë d∆∞ t√†i kho·∫£n c·ªßa b·∫°n")
    async def balance(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        
        try:
            user_id = interaction.user.id
            user_data = economy_manager.get_user_data(user_id)
            
            wallet = user_data.get("coin", 0)
            bank = user_data.get("bank", 0)
            total = wallet + bank
            
            # Create a nice embed for the balance
            embed = discord.Embed(
                title="üí∞ S·ªë d∆∞ t√†i kho·∫£n",
                description=f"**{interaction.user.display_name}**",
                color=0xF1C40F  # Gold color
            )
            embed.add_field(name="üíµ V√≠ ti·ªÅn", value=f"{wallet:,} coin", inline=True)
            embed.add_field(name="üè¶ Ng√¢n h√†ng", value=f"{bank:,} coin", inline=True)
            embed.add_field(name="üí∏ T·ªïng c·ªông", value=f"{total:,} coin", inline=False)
            embed.set_thumbnail(url=interaction.user.display_avatar.url)
            
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            print(f"Error checking balance: {e}")
            await interaction.followup.send("‚ùå ƒê√£ x·∫£y ra l·ªói khi ki·ªÉm tra s·ªë d∆∞. Vui l√≤ng th·ª≠ l·∫°i sau.")

    @app_commands.command(name="deposit", description="G·ª≠i ti·ªÅn v√†o ng√¢n h√†ng")
    @app_commands.describe(amount="S·ªë ti·ªÅn mu·ªën g·ª≠i v√†o ng√¢n h√†ng")
    async def deposit(self, interaction: discord.Interaction, amount: int):
        await interaction.response.defer(ephemeral=False)
        
        try:
            if amount <= 0:
                await interaction.followup.send("‚ùå S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0.")
                return
                
            user_id = interaction.user.id
            success, wallet, bank = economy_manager.deposit(user_id, amount)
            
            if success:
                embed = discord.Embed(
                    title="üè¶ G·ª≠i ti·ªÅn th√†nh c√¥ng",
                    description=f"**{interaction.user.display_name}** ƒë√£ g·ª≠i **{amount:,}** coin v√†o ng√¢n h√†ng.",
                    color=0x2ECC71  # Green color
                )
                embed.add_field(name="üíµ V√≠ ti·ªÅn", value=f"{wallet:,} coin", inline=True)
                embed.add_field(name="üè¶ Ng√¢n h√†ng", value=f"{bank:,} coin", inline=True)
                embed.set_thumbnail(url=interaction.user.display_avatar.url)
                
                await interaction.followup.send(embed=embed)
            else:
                await interaction.followup.send(
                    f"‚ùå B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn ƒë·ªÉ g·ª≠i. S·ªë d∆∞ hi·ªán t·∫°i: {wallet:,} coin."
                )
                
        except Exception as e:
            print(f"Error depositing: {e}")
            await interaction.followup.send("‚ùå ƒê√£ x·∫£y ra l·ªói khi g·ª≠i ti·ªÅn. Vui l√≤ng th·ª≠ l·∫°i sau.")
            
    @app_commands.command(name="withdraw", description="R√∫t ti·ªÅn t·ª´ ng√¢n h√†ng")
    @app_commands.describe(amount="S·ªë ti·ªÅn mu·ªën r√∫t t·ª´ ng√¢n h√†ng")
    async def withdraw(self, interaction: discord.Interaction, amount: int):
        await interaction.response.defer(ephemeral=False)
        
        try:
            if amount <= 0:
                await interaction.followup.send("‚ùå S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0.")
                return
                
            user_id = interaction.user.id
            success, wallet, bank = economy_manager.withdraw(user_id, amount)
            
            if success:
                embed = discord.Embed(
                    title="üí∞ R√∫t ti·ªÅn th√†nh c√¥ng",
                    description=f"**{interaction.user.display_name}** ƒë√£ r√∫t **{amount:,}** coin t·ª´ ng√¢n h√†ng.",
                    color=0x2ECC71  # Green color
                )
                embed.add_field(name="üíµ V√≠ ti·ªÅn", value=f"{wallet:,} coin", inline=True)
                embed.add_field(name="üè¶ Ng√¢n h√†ng", value=f"{bank:,} coin", inline=True)
                embed.set_thumbnail(url=interaction.user.display_avatar.url)
                
                await interaction.followup.send(embed=embed)
            else:
                await interaction.followup.send(
                    f"‚ùå B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn trong ng√¢n h√†ng ƒë·ªÉ r√∫t. S·ªë d∆∞ ng√¢n h√†ng: {bank:,} coin."
                )
                
        except Exception as e:
            print(f"Error withdrawing: {e}")
            await interaction.followup.send("‚ùå ƒê√£ x·∫£y ra l·ªói khi r√∫t ti·ªÅn. Vui l√≤ng th·ª≠ l·∫°i sau.")

async def setup(bot):
    await bot.add_cog(Balance(bot))